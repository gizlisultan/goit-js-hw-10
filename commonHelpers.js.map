{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst date = document.querySelector(\"#datetime-picker\")\nconst startBtn = document.querySelector(\"[data-start]\")\nconst days = document.querySelector(\"[data-days]\")\nconst hours = document.querySelector(\"[data-hours]\")\nconst minutes = document.querySelector(\"[data-minutes]\")\nconst seconds = document.querySelector(\"[data-seconds]\")\n\n\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        console.log(selectedDates[0]);\n    },\n  \n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate < Date.now()) {\n            iziToast.show({\n                titel: \"\",\n                message: \"Please choose a date in the future!\",\n            })\n        } else {\n            startBtn.disabled = false;\n        }\n    }\n};\n\n let userSelectedDate;\n\nflatpickr(date, options);\n\nstartBtn.disabled = true;\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener(\"click\", e => {\n    const intervalID = setInterval(() => {\n        const diff = userSelectedDate - Date.now();\n        const time = convertMs(diff);\n        if (diff <= 0) {\n            clearInterval(intervalID)\n        } else {\n            days.textContent = addLeadingZero(time.days);\n            hours.textContent = addLeadingZero(time.hours);\n            minutes.textContent = addLeadingZero(time.minutes);\n            seconds.textContent = addLeadingZero(time.seconds)\n            \n        }\n    }, 1000, startBtn.disabled = true, date.disabled = true)\n})\nfunction addLeadingZero(value) {\n    const numb = String(value)\n    return numb.length < 2 ? numb.padStart(2, \"0\") : numb;\n\n}"],"names":["date","startBtn","days","hours","minutes","seconds","options","selectedDates","userSelectedDate","iziToast","flatpickr","convertMs","ms","e","intervalID","diff","time","addLeadingZero","value","numb"],"mappings":"2GAQA,MAAMA,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAKjDC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC/B,EAED,QAAQA,EAAe,CACnBC,EAAmBD,EAAc,CAAC,EAC9BC,EAAmB,KAAK,MACxBC,EAAS,KAAK,CACV,MAAO,GACP,QAAS,qCACzB,CAAa,EAEDR,EAAS,SAAW,EAE3B,CACL,EAEC,IAAIO,EAELE,EAAUV,EAAMM,CAAO,EAEvBL,EAAS,SAAW,GAEpB,SAASU,EAAUC,EAAI,CAQrB,MAAMV,EAAO,KAAK,MAAMU,EAAK,KAAG,EAE1BT,EAAQ,KAAK,MAAOS,EAAK,MAAO,IAAI,EAEpCR,EAAU,KAAK,MAAQQ,EAAK,MAAO,KAAQ,GAAM,EAEjDP,EAAU,KAAK,MAASO,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAJ,EAAS,iBAAiB,QAASY,GAAK,CACpC,MAAMC,EAAa,YAAY,IAAM,CACjC,MAAMC,EAAOP,EAAmB,KAAK,IAAG,EAClCQ,EAAOL,EAAUI,CAAI,EACvBA,GAAQ,EACR,cAAcD,CAAU,GAExBZ,EAAK,YAAce,EAAeD,EAAK,IAAI,EAC3Cb,EAAM,YAAcc,EAAeD,EAAK,KAAK,EAC7CZ,EAAQ,YAAca,EAAeD,EAAK,OAAO,EACjDX,EAAQ,YAAcY,EAAeD,EAAK,OAAO,EAG7D,EAAO,IAAMf,EAAS,SAAW,GAAMD,EAAK,SAAW,EAAI,CAC3D,CAAC,EACD,SAASiB,EAAeC,EAAO,CAC3B,MAAMC,EAAO,OAAOD,CAAK,EACzB,OAAOC,EAAK,OAAS,EAAIA,EAAK,SAAS,EAAG,GAAG,EAAIA,CAErD"}